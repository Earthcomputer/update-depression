plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url 'https://maven.xpple.dev/maven2'
    }
    maven {
        url 'https://jitpack.io/'
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    include modImplementation("dev.xpple:betterconfig:${project.betterconfig_version}")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

remapJar {
    version = "${project.version}+mc${project.minecraft_version}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}

modrinth {
    token = project.hasProperty('modrinthKey') ? project.modrinthKey : System.getenv('MODRINTH_TOKEN')
    projectId = 'update-depression'
    versionNumber = "${project.version}+mc${project.minecraft_version}"
    versionType = 'release'
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ['fabric', 'quilt']
    dependencies {
        required.project 'fabric-api'
        embedded.project 'betterconfig'
    }
}
